<script type="module" src="https://unpkg.com/@google/model-viewer/dist/model-viewer.min.js"></script>
<link rel="stylesheet" href="https:{{ 'component-slider.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="https:{{ 'component-rating.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="https:{{ 'component-loading-overlay.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="https:{{ 'section-main-product.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="https:{{ 'component-accordion.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="https:{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="https:{{ 'component-rte.css' | asset_url }}" media="print" onload="this.media='all'">

<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-deferred-media.css' | asset_url }}" media="print" onload="this.media='all'">
<style>
	.dpo-container {
     display: none !important; 
    }
</style>
<!-- DETECT BRAND IN URL -->
{% assign url_parts = request.path | split: "/" %}
{% for part in url_parts %}
  {% case part %}
      {% when "polaris" %}
          {% assign currentBrand  = "polaris" %}
          {% assign brandColor = "#305799" %}
          {% break %}
      {% when "yamaha" %}
          {% assign currentBrand  = "yamaha" %}
          {% assign brandColor = "#CCCCCB" %}
          {% break %}
      {% when "can-am" %}
          {% assign currentBrand  = "can-am" %}
          {% assign brandColor = "#fdc832" %}
          {% break %}
      {% when "tracker" %}
          {% assign currentBrand  = "tracker" %}
          {% assign brandColor = "#262526" %}
          {% break %}
      {% when "honda" %}
          {% assign currentBrand  = "honda" %}
          {% assign brandColor = "#e0262f" %}
          {% break %}
      {% else %}
          {% assign currentBrand = "all" %}
          {% assign brandColor = "#ccc" %}
  {% endcase %}
{% endfor %}
<style>
  
  .featured-image-section {
    
    height:auto;
  }
  .bigIMG {
     max-height:550px;
     margin:auto;
  }
  .thumby {
    cursor: pointer;
    width:200px;
  }
	.product-make-and-model {
      	color: #aaa;
    	font-family: "Rajdhani";
      	font-weight: 600;
        letter-spacing: -0.8px;
    }
  .product-price {
      	color: #000000;
    	font-family: "Rajdhani" !important;
      	font-weight: 700;
        letter-spacing: -0.8px;
        font-size: 1.5rem;
    }
  .add-to-cart-button {
    
    font-family: "Rajdhani" !important;
      	font-weight: 700;
        font-size: 1.5rem;
  }
  
  .bigIMG-hover-zoom--point-zoom img {
    cursor: zoom-in;
    transform-origin: 65% 75%;
    transition: transform .5s, filter .2s ease-out;
  }    

  .bigIMG-hover-zoom--point-zoom:hover img {
    cursor: zoom-in;
  	transform:scale(5);
    -ms-transform:scale(5); /* IE 9 */
    -moz-transform:scale(5); /* Firefox */
    -webkit-transform:scale(5); /* Safari and Chrome */
    -o-transform:scale(5); /* Opera */
  }
</style>
<link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css"/>


{%- assign first_3d_model = product.media | where: "media_type", "model" | first -%}
{%- assign productPictures = product.media | where: "media_type", "image" -%}
{%- if first_3d_model -%}
  {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
  <link id="ModelViewerStyle" rel="stylesheet" href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css" media="print" onload="this.media='all'" />
  <link id="ModelViewerOverride" rel="stylesheet" href="{{ 'component-model-viewer-ui.css' | asset_url }}" media="print" onload="this.media='all'" />
{%- endif -%}
<script>
function swapImages(sent_img_src) {
	document.getElementById('bigIMG').src = sent_img_src;
}
</script>
<section class="w-full">
  <div class="product-wrapper w-full flex flex-wrap lg:flex-nowrap md:flex-wrap sm:flex-wrap justify-center lg:mt-12 md:-10 sm:mt-6">
  <!-- IMAGE VIEWER -->
	<div class="featured-image-section sm:w-full md:w-1/2 lg:w-1/2 flex flex-wrap justify-center lg:ml-20 md:ml-10 sm:ml-5 max-h-screen">
      <div class="w-full flex justify-center mx-auto">
      	<!-- Import the component -->


<!-- Use it like any other HTML element -->
        <div class="examples-container">
    <div class="sample">
      <div id="variants" class="demo">
<model-viewer id="shoe" camera-controls="" src="../../shared-assets/models/glTF-Sample-Models/2.0/MaterialsVariantsShoe/glTF-Binary/MaterialsVariantsShoe.glb" ar="" ar-modes="webxr scene-viewer quick-look" alt="A 3D model of a Shoe" data-js-focus-visible="" ar-status="not-presenting">
  <div class="controls">
    <div>Variant: <select id="variant"><option value="midnight">midnight</option><option value="beach">beach</option><option value="street">street</option><option value="default">Default</option></select></div>
  </div>
</model-viewer>
<script>
const modelViewerVariants = document.querySelector("model-viewer#shoe");
const select = document.querySelector('#variant');

modelViewerVariants.addEventListener('load', () => {
  const names = modelViewerVariants.availableVariants;
  for (const name of names) {
    const option = document.createElement('option');
    option.value = name;
    option.textContent = name;
    select.appendChild(option);
  }
  // Adds a default option.
  const option = document.createElement('option');
    option.value = 'default';
    option.textContent = 'Default';
    select.appendChild(option);
});

select.addEventListener('input', (event) => {
  modelViewerVariants.variantName = event.target.value === 'default' ? null : event.target.value;
});
</script>
            </div>
      <div class="content">
        <div class="wrapper">
          <div class="heading">
            <h2 class="demo-title">Swap Model Variants</h2>
            <p>This demonstrates the use of the glTF <a href="https://www.khronos.org/blog/streamlining-3d-commerce-with-material-variant-support-in-gltf-assets">materials
            variants extension</a> which allows multiple materials and textures
            to be packed with a single geometry in a GLB. Our API exposes these
            variant names as <code>availableVariants</code> and you can select
            one using the <code>variantName</code> attribute. This is similar
            functionality to the lower-level scene-graph API below, but in that
            case it is up to you to choose the right texture URL, rather than
            having that information stored in the GLB. <i>Note: setting <code>variantName</code>
            to <code>null</code> reverts to the initial material.</i></p>
          </div>
          <example-snippet stamp-to="variants" highlight-as="html">
            <template>
<model-viewer id="shoe" camera-controls="" src="../../shared-assets/models/glTF-Sample-Models/2.0/MaterialsVariantsShoe/glTF-Binary/MaterialsVariantsShoe.glb" ar="" ar-modes="webxr scene-viewer quick-look" alt="A 3D model of a Shoe">
  <div class="controls">
    <div>Variant: <select id="variant"></select></div>
  </div>
</model-viewer>
<script>
const modelViewerVariants = document.querySelector("model-viewer#shoe");
const select = document.querySelector('#variant');

modelViewerVariants.addEventListener('load', () => {
  const names = modelViewerVariants.availableVariants;
  for (const name of names) {
    const option = document.createElement('option');
    option.value = name;
    option.textContent = name;
    select.appendChild(option);
  }
  // Adds a default option.
  const option = document.createElement('option');
    option.value = 'default';
    option.textContent = 'Default';
    select.appendChild(option);
});

select.addEventListener('input', (event) => {
  modelViewerVariants.variantName = event.target.value === 'default' ? null : event.target.value;
});
</script>
            </template>
          <pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>model-viewer</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>shoe<span class="token punctuation">"</span></span> <span class="token attr-name">camera-controls</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/MaterialsVariantsShoe/glTF-Binary/MaterialsVariantsShoe.glb<span class="token punctuation">"</span></span> <span class="token attr-name">ar</span> <span class="token attr-name">ar-modes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>webxr scene-viewer quick-look<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>A 3D model of a Shoe<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>Variant: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>variant<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>model-viewer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> modelViewerVariants <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"model-viewer#shoe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> select <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#variant'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

modelViewerVariants<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> names <span class="token operator">=</span> modelViewerVariants<span class="token punctuation">.</span>availableVariants<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> name <span class="token keyword">of</span> names<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> option <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'option'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    option<span class="token punctuation">.</span>value <span class="token operator">=</span> name<span class="token punctuation">;</span>
    option<span class="token punctuation">.</span>textContent <span class="token operator">=</span> name<span class="token punctuation">;</span>
    select<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// Adds a default option.</span>
  <span class="token keyword">const</span> option <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'option'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    option<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'default'</span><span class="token punctuation">;</span>
    option<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">'Default'</span><span class="token punctuation">;</span>
    select<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

select<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  modelViewerVariants<span class="token punctuation">.</span>variantName <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token string">'default'</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre></example-snippet>
        </div>
      </div>
    </div>

    <div class="sample">
      <div id="transforms" class="demo">
<model-viewer id="transform" orientation="20deg 0 0" bounds="tight" shadow-intensity="1" camera-controls="" ar="" ar-modes="webxr scene-viewer quick-look" src="../../shared-assets/models/Astronaut.glb" alt="A 3D model of an astronaut" data-js-focus-visible="" ar-status="not-presenting">
  <div class="controls">
    <div>Roll: <input id="roll" value="20" size="3" class="number"> degrees</div>
    <div>Pitch: <input id="pitch" value="0" size="3" class="number"> degrees</div>
    <div>Yaw: <input id="yaw" value="0" size="3" class="number"> degrees</div>
    <div>
      Scale: X: <input id="x" value="1" size="3" class="number">,
      Y: <input id="y" value="1" size="3" class="number">,
      Z: <input id="z" value="1" size="3" class="number">
    </div>
    <button id="frame">Update Framing</button>
  </div>
</model-viewer>
<script>
const modelViewerTransform = document.querySelector("model-viewer#transform");
const roll = document.querySelector('#roll');
const pitch = document.querySelector('#pitch');
const yaw = document.querySelector('#yaw');
const x = document.querySelector('#x');
const y = document.querySelector('#y');
const z = document.querySelector('#z');
const frame = document.querySelector('#frame');

frame.addEventListener('click', () => {
  modelViewerTransform.updateFraming();
});

const updateOrientation = () => {
  modelViewerTransform.orientation = `${roll.value}deg ${pitch.value}deg ${yaw.value}deg`;
};

const updateScale = () => {
  modelViewerTransform.scale = `${x.value} ${y.value} ${z.value}`;
};

roll.addEventListener('input', () => {
  updateOrientation();
});
pitch.addEventListener('input', () => {
  updateOrientation();
});
yaw.addEventListener('input', () => {
  updateOrientation();
});
x.addEventListener('input', () => {
  updateScale();
});
y.addEventListener('input', () => {
  updateScale();
});
z.addEventListener('input', () => {
  updateScale();
});
</script>
            </div>
      <div class="content">
        <div class="wrapper">
          <div class="heading">
            <h2 class="demo-title">Model Transformations</h2>
            <p>This demonstrates the <code>orientation</code> and
            <code>scale</code> attributes which allow the model to be
            transformed. Note that if specified before the model loads, they
            will be taken into account by the automatic camera framing. If they
            are changed afterwards the camera will not move, so to get new
            automatic framing the <code>updateFraming()</code> method must be
            called. Also, the <code>bounds</code> attribute is set to
            <code>"tight"</code> to keep the transformed model from floating
            over its shadow.</p>
            <p>Note that these changes can be made in AR as well, but only in
            WebXR mode, as this is the only mode that remains in the browser.
            Changes you made ahead of time will not be reflected in Scene
            Viewer, since this app downloads the original model again from its
            URL. iOS Quick Look will reflect your changes as long as
            <code>ios-src</code> is not specified, since in this case a USDZ
            will be generated on the fly from the current state.</p>
          </div>
          <example-snippet stamp-to="transforms" highlight-as="html">
            <template>
<model-viewer id="transform" orientation="20deg 0 0" bounds="tight" shadow-intensity="1" camera-controls="" ar="" ar-modes="webxr scene-viewer quick-look" src="../../shared-assets/models/Astronaut.glb" alt="A 3D model of an astronaut">
  <div class="controls">
    <div>Roll: <input id="roll" value="20" size="3" class="number"> degrees</div>
    <div>Pitch: <input id="pitch" value="0" size="3" class="number"> degrees</div>
    <div>Yaw: <input id="yaw" value="0" size="3" class="number"> degrees</div>
    <div>
      Scale: X: <input id="x" value="1" size="3" class="number">,
      Y: <input id="y" value="1" size="3" class="number">,
      Z: <input id="z" value="1" size="3" class="number">
    </div>
    <button id="frame">Update Framing</button>
  </div>
</model-viewer>
<script>
const modelViewerTransform = document.querySelector("model-viewer#transform");
const roll = document.querySelector('#roll');
const pitch = document.querySelector('#pitch');
const yaw = document.querySelector('#yaw');
const x = document.querySelector('#x');
const y = document.querySelector('#y');
const z = document.querySelector('#z');
const frame = document.querySelector('#frame');

frame.addEventListener('click', () => {
  modelViewerTransform.updateFraming();
});

const updateOrientation = () => {
  modelViewerTransform.orientation = `${roll.value}deg ${pitch.value}deg ${yaw.value}deg`;
};

const updateScale = () => {
  modelViewerTransform.scale = `${x.value} ${y.value} ${z.value}`;
};

roll.addEventListener('input', () => {
  updateOrientation();
});
pitch.addEventListener('input', () => {
  updateOrientation();
});
yaw.addEventListener('input', () => {
  updateOrientation();
});
x.addEventListener('input', () => {
  updateScale();
});
y.addEventListener('input', () => {
  updateScale();
});
z.addEventListener('input', () => {
  updateScale();
});
</script>
            </template>
          <pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>model-viewer</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>transform<span class="token punctuation">"</span></span> <span class="token attr-name">orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20deg 0 0<span class="token punctuation">"</span></span> <span class="token attr-name">bounds</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tight<span class="token punctuation">"</span></span> <span class="token attr-name">shadow-intensity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">camera-controls</span> <span class="token attr-name">ar</span> <span class="token attr-name">ar-modes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>webxr scene-viewer quick-look<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/Astronaut.glb<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>A 3D model of an astronaut<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>Roll: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>roll<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> degrees<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>Pitch: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pitch<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> degrees<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>Yaw: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>yaw<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> degrees<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
      Scale: X: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>x<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>,
      Y: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>y<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>,
      Z: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>z<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>frame<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Update Framing<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>model-viewer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> modelViewerTransform <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"model-viewer#transform"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> roll <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#roll'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> pitch <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#pitch'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> yaw <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#yaw'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> x <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#x'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> y <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#y'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> z <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#z'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> frame <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#frame'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

frame<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  modelViewerTransform<span class="token punctuation">.</span><span class="token function">updateFraming</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">updateOrientation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  modelViewerTransform<span class="token punctuation">.</span>orientation <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>roll<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">deg </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>pitch<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">deg </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>yaw<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">deg</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">updateScale</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  modelViewerTransform<span class="token punctuation">.</span>scale <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>x<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>y<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>z<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

roll<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">updateOrientation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pitch<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">updateOrientation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
yaw<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">updateOrientation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
x<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">updateScale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
y<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">updateScale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
z<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">updateScale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre></example-snippet>
        </div>
      </div>
    </div>

    <div class="sample">
      <div id="changeColor" class="demo">
<model-viewer id="color" camera-controls="" interaction-prompt="none" src="../../shared-assets/models/Astronaut.glb" ar="" ar-modes="webxr scene-viewer quick-look" alt="A 3D model of an astronaut" data-js-focus-visible="" ar-status="not-presenting">
  <div class="controls" ,="" id="color-controls">
    <button data-color="1,0,0,1">Red</button>
    <button data-color="0,1,0,1">Green</button>
    <button data-color="0,0,1,1">Blue</button>
  </div>
</model-viewer>
<script>
const modelViewerColor = document.querySelector("model-viewer#color");

document.querySelector('#color-controls').addEventListener('click', (event) => {
  const colorString = event.target.dataset.color;

  if (!colorString) {
    return;
  }

  const color = colorString.split(',')
      .map(numberString => parseFloat(numberString));

  console.log('Changing color to: ', color);
  const [material] = modelViewerColor.model.materials;
  material.pbrMetallicRoughness.setBaseColorFactor(color);
});
</script>
            </div>
      <div class="content">
        <div class="wrapper">
          <h4 id="intro"><span class="font-medium">Directly manipulate the scene graph</span></h4>
          <div class="heading">
            <h2 class="demo-title">Change Material Base Color</h2>
            <p>This is an experimental feature, and the API is considered highly
            unstable. Please try it out, but be prepared for it to change!</p>
            <p>As above, you can change these values in AR, but only in WebXR
            mode. iOS Quick Look does not reflect these color changes as USDZ
            does not appear to support colors multiplied onto textures.</p>
          </div>
          <example-snippet stamp-to="changeColor" highlight-as="html">
            <template>
<model-viewer id="color" camera-controls="" interaction-prompt="none" src="../../shared-assets/models/Astronaut.glb" ar="" ar-modes="webxr scene-viewer quick-look" alt="A 3D model of an astronaut">
  <div class="controls" ,="" id="color-controls">
    <button data-color="1,0,0,1">Red</button>
    <button data-color="0,1,0,1">Green</button>
    <button data-color="0,0,1,1">Blue</button>
  </div>
</model-viewer>
<script>
const modelViewerColor = document.querySelector("model-viewer#color");

document.querySelector('#color-controls').addEventListener('click', (event) => {
  const colorString = event.target.dataset.color;

  if (!colorString) {
    return;
  }

  const color = colorString.split(',')
      .map(numberString => parseFloat(numberString));

  console.log('Changing color to: ', color);
  const [material] = modelViewerColor.model.materials;
  material.pbrMetallicRoughness.setBaseColorFactor(color);
});
</script>
            </template>
          <pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>model-viewer</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>color<span class="token punctuation">"</span></span> <span class="token attr-name">camera-controls</span> <span class="token attr-name">interaction-prompt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/Astronaut.glb<span class="token punctuation">"</span></span> <span class="token attr-name">ar</span> <span class="token attr-name">ar-modes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>webxr scene-viewer quick-look<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>A 3D model of an astronaut<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span> <span class="token attr-name">,</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>color-controls<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">data-color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1,0,0,1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Red<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">data-color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0,1,0,1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Green<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">data-color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0,0,1,1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Blue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>model-viewer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> modelViewerColor <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"model-viewer#color"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#color-controls'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> colorString <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>color<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>colorString<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> color <span class="token operator">=</span> colorString<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">numberString</span> <span class="token operator">=&gt;</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>numberString<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Changing color to: '</span><span class="token punctuation">,</span> color<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>material<span class="token punctuation">]</span> <span class="token operator">=</span> modelViewerColor<span class="token punctuation">.</span>model<span class="token punctuation">.</span>materials<span class="token punctuation">;</span>
  material<span class="token punctuation">.</span>pbrMetallicRoughness<span class="token punctuation">.</span><span class="token function">setBaseColorFactor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre></example-snippet>
        </div>
      </div>
    </div>


    <div class="sample">
      <div id="changeMaterial" class="demo">
<model-viewer id="sphere" camera-controls="" interaction-prompt="none" src="../../shared-assets/models/reflective-sphere.gltf" ar="" ar-modes="webxr scene-viewer quick-look" alt="A 3D model of a sphere" data-js-focus-visible="" ar-status="not-presenting">
  <div class="controls">
    <div>
      <p>Metalness: <span id="metalness-value"></span></p>
      <input id="metalness" type="range" min="0" max="1" step="0.01" value="1">
    </div>
    <div>
      <p>Roughness: <span id="roughness-value"></span></p>
      <input id="roughness" type="range" min="0" max="1" step="0.01" value="0">
    </div>
  </div>
</model-viewer>
<script>
const modelViewerParameters = document.querySelector("model-viewer#sphere");

modelViewerParameters.addEventListener("load", (ev) => {

  let material = modelViewerParameters.model.materials[0];

  let metalnessDisplay = document.querySelector("#metalness-value");
  let roughnessDisplay = document.querySelector("#roughness-value");

  metalnessDisplay.textContent = material.pbrMetallicRoughness.metallicFactor;
  roughnessDisplay.textContent = material.pbrMetallicRoughness.roughnessFactor;

  // Defaults to gold
  material.pbrMetallicRoughness.setBaseColorFactor([0.7294, 0.5333, 0.0392]);

  document.querySelector('#metalness').addEventListener('input', (event) => {
    material.pbrMetallicRoughness.setMetallicFactor(event.target.value);
    metalnessDisplay.textContent = event.target.value;
  });

  document.querySelector('#roughness').addEventListener('input', (event) => {
    material.pbrMetallicRoughness.setRoughnessFactor(event.target.value);
    roughnessDisplay.textContent = event.target.value;
  });
})
</script>
            </div>
      <div class="content">
        <div class="wrapper">
          <div class="heading">
            <h2 class="demo-title">Change Material Metalness and Roughness Factors</h2>
            <p>As above, you can change these values in AR, but only in WebXR
            mode. iOS Quick Look does reflect these property changes since they
            are not also textured.</p>
          </div>
          <example-snippet stamp-to="changeMaterial" highlight-as="html">
            <template>
<model-viewer id="sphere" camera-controls="" interaction-prompt="none" src="../../shared-assets/models/reflective-sphere.gltf" ar="" ar-modes="webxr scene-viewer quick-look" alt="A 3D model of a sphere">
  <div class="controls">
    <div>
      <p>Metalness: <span id="metalness-value"></span></p>
      <input id="metalness" type="range" min="0" max="1" step="0.01" value="1">
    </div>
    <div>
      <p>Roughness: <span id="roughness-value"></span></p>
      <input id="roughness" type="range" min="0" max="1" step="0.01" value="0">
    </div>
  </div>
</model-viewer>
<script>
const modelViewerParameters = document.querySelector("model-viewer#sphere");

modelViewerParameters.addEventListener("load", (ev) => {

  let material = modelViewerParameters.model.materials[0];

  let metalnessDisplay = document.querySelector("#metalness-value");
  let roughnessDisplay = document.querySelector("#roughness-value");

  metalnessDisplay.textContent = material.pbrMetallicRoughness.metallicFactor;
  roughnessDisplay.textContent = material.pbrMetallicRoughness.roughnessFactor;

  // Defaults to gold
  material.pbrMetallicRoughness.setBaseColorFactor([0.7294, 0.5333, 0.0392]);

  document.querySelector('#metalness').addEventListener('input', (event) => {
    material.pbrMetallicRoughness.setMetallicFactor(event.target.value);
    metalnessDisplay.textContent = event.target.value;
  });

  document.querySelector('#roughness').addEventListener('input', (event) => {
    material.pbrMetallicRoughness.setRoughnessFactor(event.target.value);
    roughnessDisplay.textContent = event.target.value;
  });
})
</script>
            </template>
          <pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>model-viewer</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sphere<span class="token punctuation">"</span></span> <span class="token attr-name">camera-controls</span> <span class="token attr-name">interaction-prompt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/reflective-sphere.gltf<span class="token punctuation">"</span></span> <span class="token attr-name">ar</span> <span class="token attr-name">ar-modes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>webxr scene-viewer quick-look<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>A 3D model of a sphere<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Metalness: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>metalness-value<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>metalness<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>range<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.01<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Roughness: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>roughness-value<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>roughness<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>range<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.01<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>model-viewer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> modelViewerParameters <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"model-viewer#sphere"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

modelViewerParameters<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"load"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  <span class="token keyword">let</span> material <span class="token operator">=</span> modelViewerParameters<span class="token punctuation">.</span>model<span class="token punctuation">.</span>materials<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> metalnessDisplay <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#metalness-value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> roughnessDisplay <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#roughness-value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  metalnessDisplay<span class="token punctuation">.</span>textContent <span class="token operator">=</span> material<span class="token punctuation">.</span>pbrMetallicRoughness<span class="token punctuation">.</span>metallicFactor<span class="token punctuation">;</span>
  roughnessDisplay<span class="token punctuation">.</span>textContent <span class="token operator">=</span> material<span class="token punctuation">.</span>pbrMetallicRoughness<span class="token punctuation">.</span>roughnessFactor<span class="token punctuation">;</span>

  <span class="token comment">// Defaults to gold</span>
  material<span class="token punctuation">.</span>pbrMetallicRoughness<span class="token punctuation">.</span><span class="token function">setBaseColorFactor</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.7294</span><span class="token punctuation">,</span> <span class="token number">0.5333</span><span class="token punctuation">,</span> <span class="token number">0.0392</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#metalness'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    material<span class="token punctuation">.</span>pbrMetallicRoughness<span class="token punctuation">.</span><span class="token function">setMetallicFactor</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    metalnessDisplay<span class="token punctuation">.</span>textContent <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#roughness'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    material<span class="token punctuation">.</span>pbrMetallicRoughness<span class="token punctuation">.</span><span class="token function">setRoughnessFactor</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    roughnessDisplay<span class="token punctuation">.</span>textContent <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre></example-snippet>
        </div>
      </div>
    </div>

    <div class="sample">
      <div id="swapTextures" class="demo">
<model-viewer id="lantern" camera-controls="" src="../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF-Binary/DamagedHelmet.glb" ar="" ar-modes="webxr scene-viewer quick-look" alt="A 3D model of a helmet" data-js-focus-visible="" ar-status="not-presenting">
  <div class="controls">
    <div>
      <p>Diffuse</p>
      <select id="diffuse">
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_albedo.jpg">Damaged helmet</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/Lantern/glTF/Lantern_baseColor.png">Lantern Pole</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_baseColor.png">Water Bottle</option>
      </select>
    </div>
    <div>
      <p>Metallic-roughness</p>
      <select id="metallicRoughness">
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_metalRoughness.jpg">Damaged helmet</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/Lantern/glTF/Lantern_roughnessMetallic.png">Lantern Pole</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_occlusionRoughnessMetallic.png">Water Bottle</option>
      </select>
    </div>
  </div>
</model-viewer>
<script type="module">
const modelViewerTexture = document.querySelector("model-viewer#lantern");

modelViewerTexture.addEventListener("load", (ev) => {

  let material = modelViewerTexture.model.materials[0];

  let applyPBRTexture = (channel, event) => {
    material.pbrMetallicRoughness[channel].texture.source.setURI(event.target.value);
  }

  document.querySelector('#diffuse').addEventListener('input', (event) => {
    applyPBRTexture('baseColorTexture', event);
  });

  document.querySelector('#metallicRoughness').addEventListener('input', (event) => {
    applyPBRTexture('metallicRoughnessTexture', event);
  });
})

</script>
            </div>
      <div class="content">
        <div class="wrapper">
          <div class="heading">
            <h2 class="demo-title">Swap textures - Diffuse/MetallicRoughness</h2>
            <p>As above, you can change these values in AR, but only in WebXR
            mode. iOS Quick Look reflects these texture changes so long as the
            USDZ is auto-generated.</p>
          </div>
          <example-snippet stamp-to="swapTextures" highlight-as="html">
            <template>
<model-viewer id="lantern" camera-controls="" src="../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF-Binary/DamagedHelmet.glb" ar="" ar-modes="webxr scene-viewer quick-look" alt="A 3D model of a helmet">
  <div class="controls">
    <div>
      <p>Diffuse</p>
      <select id="diffuse">
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_albedo.jpg">Damaged helmet</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/Lantern/glTF/Lantern_baseColor.png">Lantern Pole</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_baseColor.png">Water Bottle</option>
      </select>
    </div>
    <div>
      <p>Metallic-roughness</p>
      <select id="metallicRoughness">
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_metalRoughness.jpg">Damaged helmet</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/Lantern/glTF/Lantern_roughnessMetallic.png">Lantern Pole</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_occlusionRoughnessMetallic.png">Water Bottle</option>
      </select>
    </div>
  </div>
</model-viewer>
<script type="module">
const modelViewerTexture = document.querySelector("model-viewer#lantern");

modelViewerTexture.addEventListener("load", (ev) => {

  let material = modelViewerTexture.model.materials[0];

  let applyPBRTexture = (channel, event) => {
    material.pbrMetallicRoughness[channel].texture.source.setURI(event.target.value);
  }

  document.querySelector('#diffuse').addEventListener('input', (event) => {
    applyPBRTexture('baseColorTexture', event);
  });

  document.querySelector('#metallicRoughness').addEventListener('input', (event) => {
    applyPBRTexture('metallicRoughnessTexture', event);
  });
})

</script>
            </template>
          <pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>model-viewer</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lantern<span class="token punctuation">"</span></span> <span class="token attr-name">camera-controls</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF-Binary/DamagedHelmet.glb<span class="token punctuation">"</span></span> <span class="token attr-name">ar</span> <span class="token attr-name">ar-modes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>webxr scene-viewer quick-look<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>A 3D model of a helmet<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Diffuse<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>diffuse<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_albedo.jpg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Damaged helmet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/Lantern/glTF/Lantern_baseColor.png<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Lantern Pole<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_baseColor.png<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Water Bottle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Metallic-roughness<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>metallicRoughness<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_metalRoughness.jpg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Damaged helmet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/Lantern/glTF/Lantern_roughnessMetallic.png<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Lantern Pole<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_occlusionRoughnessMetallic.png<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Water Bottle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>model-viewer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> modelViewerTexture <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"model-viewer#lantern"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

modelViewerTexture<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"load"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  <span class="token keyword">let</span> material <span class="token operator">=</span> modelViewerTexture<span class="token punctuation">.</span>model<span class="token punctuation">.</span>materials<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> <span class="token function-variable function">applyPBRTexture</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">channel<span class="token punctuation">,</span> event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    material<span class="token punctuation">.</span>pbrMetallicRoughness<span class="token punctuation">[</span>channel<span class="token punctuation">]</span><span class="token punctuation">.</span>texture<span class="token punctuation">.</span>source<span class="token punctuation">.</span><span class="token function">setURI</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#diffuse'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">applyPBRTexture</span><span class="token punctuation">(</span><span class="token string">'baseColorTexture'</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#metallicRoughness'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">applyPBRTexture</span><span class="token punctuation">(</span><span class="token string">'metallicRoughnessTexture'</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre></example-snippet>
        </div>
      </div>
    </div>

    <div class="sample">
      <div id="swapTextures2" class="demo">
<model-viewer id="helmet" camera-controls="" src="../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF-Binary/DamagedHelmet.glb" ar="" ar-modes="webxr scene-viewer quick-look" alt="A 3D model of a helmet" data-js-focus-visible="" ar-status="not-presenting">
  <div class="controls">
    <div>
      <p>Normals</p>
      <select id="normals">
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_normal.jpg">Damaged helmet</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/Lantern/glTF/Lantern_normal.png">Lantern Pole</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_normal.png">Water Bottle</option>
      </select>
    </div>
    <div>
      <p>Occlusion</p>
      <select id="occlusion">
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_AO.jpg">Damaged helmet</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_occlusionRoughnessMetallic.png">Water Bottle</option>
      </select>
    </div>
    <div>
      <p>Emission</p>
      <select id="emission">
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_emissive.jpg">Damaged helmet</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/Lantern/glTF/Lantern_emissive.png">Lantern Pole</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_emissive.png">Water Bottle</option>
      </select>
    </div>
  </div>
</model-viewer>
<script type="module">
const modelViewerTexture = document.querySelector("model-viewer#helmet");

modelViewerTexture.addEventListener("load", () => {

  let material = modelViewerTexture.model.materials[0];

  let createAndApplyTexture = async (channel, event) => {
    let texture = await modelViewerTexture.createTexture(event.target.value);
    material[channel].setTexture(texture);
  }

  document.querySelector('#normals').addEventListener('input', (event) => {
    createAndApplyTexture('normalTexture', event);
  });

  document.querySelector('#occlusion').addEventListener('input', (event) => {
    createAndApplyTexture('occlusionTexture', event);
  });

  document.querySelector('#emission').addEventListener('input', (event) => {
    createAndApplyTexture('emissiveTexture', event);
  });
});

</script>
            </div>
      <div class="content">
        <div class="wrapper">
          <div class="heading">
            <h2 class="demo-title">Swap textures - Normals/Occlusion/Emission</h2>
            <p>As above, you can change these values in AR, but only in WebXR
              mode. iOS Quick Look reflects these texture changes so long as the
              USDZ is auto-generated.</p>
          </div>
          <example-snippet stamp-to="swapTextures2" highlight-as="html">
            <template>
<model-viewer id="helmet" camera-controls="" src="../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF-Binary/DamagedHelmet.glb" ar="" ar-modes="webxr scene-viewer quick-look" alt="A 3D model of a helmet">
  <div class="controls">
    <div>
      <p>Normals</p>
      <select id="normals">
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_normal.jpg">Damaged helmet</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/Lantern/glTF/Lantern_normal.png">Lantern Pole</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_normal.png">Water Bottle</option>
      </select>
    </div>
    <div>
      <p>Occlusion</p>
      <select id="occlusion">
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_AO.jpg">Damaged helmet</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_occlusionRoughnessMetallic.png">Water Bottle</option>
      </select>
    </div>
    <div>
      <p>Emission</p>
      <select id="emission">
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_emissive.jpg">Damaged helmet</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/Lantern/glTF/Lantern_emissive.png">Lantern Pole</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_emissive.png">Water Bottle</option>
      </select>
    </div>
  </div>
</model-viewer>
<script type="module">
const modelViewerTexture = document.querySelector("model-viewer#helmet");

modelViewerTexture.addEventListener("load", () => {

  let material = modelViewerTexture.model.materials[0];

  let createAndApplyTexture = async (channel, event) => {
    let texture = await modelViewerTexture.createTexture(event.target.value);
    material[channel].setTexture(texture);
  }

  document.querySelector('#normals').addEventListener('input', (event) => {
    createAndApplyTexture('normalTexture', event);
  });

  document.querySelector('#occlusion').addEventListener('input', (event) => {
    createAndApplyTexture('occlusionTexture', event);
  });

  document.querySelector('#emission').addEventListener('input', (event) => {
    createAndApplyTexture('emissiveTexture', event);
  });
});

</script>
            </template>
          <pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>model-viewer</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>helmet<span class="token punctuation">"</span></span> <span class="token attr-name">camera-controls</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF-Binary/DamagedHelmet.glb<span class="token punctuation">"</span></span> <span class="token attr-name">ar</span> <span class="token attr-name">ar-modes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>webxr scene-viewer quick-look<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>A 3D model of a helmet<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Normals<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>normals<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_normal.jpg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Damaged helmet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/Lantern/glTF/Lantern_normal.png<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Lantern Pole<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_normal.png<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Water Bottle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Occlusion<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>occlusion<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_AO.jpg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Damaged helmet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_occlusionRoughnessMetallic.png<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Water Bottle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Emission<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>emission<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_emissive.jpg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Damaged helmet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/Lantern/glTF/Lantern_emissive.png<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Lantern Pole<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_emissive.png<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Water Bottle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>model-viewer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> modelViewerTexture <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"model-viewer#helmet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

modelViewerTexture<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"load"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  <span class="token keyword">let</span> material <span class="token operator">=</span> modelViewerTexture<span class="token punctuation">.</span>model<span class="token punctuation">.</span>materials<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> <span class="token function-variable function">createAndApplyTexture</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">channel<span class="token punctuation">,</span> event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> texture <span class="token operator">=</span> <span class="token keyword">await</span> modelViewerTexture<span class="token punctuation">.</span><span class="token function">createTexture</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    material<span class="token punctuation">[</span>channel<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setTexture</span><span class="token punctuation">(</span>texture<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#normals'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">createAndApplyTexture</span><span class="token punctuation">(</span><span class="token string">'normalTexture'</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#occlusion'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">createAndApplyTexture</span><span class="token punctuation">(</span><span class="token string">'occlusionTexture'</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#emission'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">createAndApplyTexture</span><span class="token punctuation">(</span><span class="token string">'emissiveTexture'</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre></example-snippet>
        </div>
      </div>
    </div>



    <div class="sample">
      <div id="createTexturesExample" class="demo">
<model-viewer id="duck" camera-controls="" src="../../shared-assets/models/glTF-Sample-Models/2.0/Duck/glTF-Binary/Duck.glb" ar="" ar-modes="webxr scene-viewer quick-look" alt="A 3D model of a helmet" data-js-focus-visible="" ar-status="not-presenting">
  <div class="controls">
      <p>Normals</p>
      <select id="normals2">
        <option>None</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_normal.jpg">Damaged helmet</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/Lantern/glTF/Lantern_normal.png">Lantern Pole</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_normal.png">Water Bottle</option>
      </select>
    </div>
</model-viewer>
<script type="module">
const modelViewerTexture = document.querySelector("model-viewer#duck");

modelViewerTexture.addEventListener("load", () => {

  let material = modelViewerTexture.model.materials[0];

  let createAndApplyTexture = async (channel, event) => {
    if(event.target.value == "None"){
      // Clears the texture.
      material[channel].setTexture(null);
    }else if(event.target.value) {
      // Creates a new texture.
      let texture = await modelViewerTexture.createTexture(event.target.value);
      // Applies the new texture to the specified channel.
      material[channel].setTexture(texture);
    }
  }

  document.querySelector('#normals2').addEventListener('input', (event) => {
    createAndApplyTexture('normalTexture', event);
  });
});

</script>



            </div>
      <div class="content">
        <div class="wrapper">
          <div class="heading">
            <h2 class="demo-title">Swap textures - Normals/Occlusion/Emission</h2>
            <p>As above, you can change these values in AR, but only in WebXR
              mode. iOS Quick Look reflects these texture changes so long as the
              USDZ is auto-generated.</p>
          </div>
          <example-snippet stamp-to="createTexturesExample" highlight-as="html">
            <template>
<model-viewer id="duck" camera-controls="" src="../../shared-assets/models/glTF-Sample-Models/2.0/Duck/glTF-Binary/Duck.glb" ar="" ar-modes="webxr scene-viewer quick-look" alt="A 3D model of a helmet">
  <div class="controls">
      <p>Normals</p>
      <select id="normals2">
        <option>None</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_normal.jpg">Damaged helmet</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/Lantern/glTF/Lantern_normal.png">Lantern Pole</option>
        <option value="../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_normal.png">Water Bottle</option>
      </select>
    </div>
</model-viewer>
<script type="module">
const modelViewerTexture = document.querySelector("model-viewer#duck");

modelViewerTexture.addEventListener("load", () => {

  let material = modelViewerTexture.model.materials[0];

  let createAndApplyTexture = async (channel, event) => {
    if(event.target.value == "None"){
      // Clears the texture.
      material[channel].setTexture(null);
    }else if(event.target.value) {
      // Creates a new texture.
      let texture = await modelViewerTexture.createTexture(event.target.value);
      // Applies the new texture to the specified channel.
      material[channel].setTexture(texture);
    }
  }

  document.querySelector('#normals2').addEventListener('input', (event) => {
    createAndApplyTexture('normalTexture', event);
  });
});

</script>



            </template>
          <pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>model-viewer</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>duck<span class="token punctuation">"</span></span> <span class="token attr-name">camera-controls</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/Duck/glTF-Binary/Duck.glb<span class="token punctuation">"</span></span> <span class="token attr-name">ar</span> <span class="token attr-name">ar-modes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>webxr scene-viewer quick-look<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>A 3D model of a helmet<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Normals<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>normals2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">&gt;</span></span>None<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/DamagedHelmet/glTF/Default_normal.jpg<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Damaged helmet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/Lantern/glTF/Lantern_normal.png<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Lantern Pole<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/WaterBottle/glTF/WaterBottle_normal.png<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Water Bottle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>model-viewer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> modelViewerTexture <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"model-viewer#duck"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

modelViewerTexture<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"load"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  <span class="token keyword">let</span> material <span class="token operator">=</span> modelViewerTexture<span class="token punctuation">.</span>model<span class="token punctuation">.</span>materials<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> <span class="token function-variable function">createAndApplyTexture</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">channel<span class="token punctuation">,</span> event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token string">"None"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">// Clears the texture.</span>
      material<span class="token punctuation">[</span>channel<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setTexture</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Creates a new texture.</span>
      <span class="token keyword">let</span> texture <span class="token operator">=</span> <span class="token keyword">await</span> modelViewerTexture<span class="token punctuation">.</span><span class="token function">createTexture</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// Applies the new texture to the specified channel.</span>
      material<span class="token punctuation">[</span>channel<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setTexture</span><span class="token punctuation">(</span>texture<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#normals2'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">createAndApplyTexture</span><span class="token punctuation">(</span><span class="token string">'normalTexture'</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre></example-snippet>
        </div>
      </div>
    </div>

    <div class="sample">
      <div id="pickMaterialExample" class="demo">
<model-viewer id="pickMaterial" camera-controls="" src="../../shared-assets/models/glTF-Sample-Models/2.0/Buggy/glTF-Binary/Buggy.glb" ar="" ar-modes="webxr scene-viewer" scale="0.001 0.001 0.001" alt="A Material Picking Example" data-js-focus-visible="" ar-status="not-presenting">
</model-viewer>
<script type="module">
const modelViewer = document.querySelector("model-viewer#pickMaterial");

modelViewer.addEventListener("load", () => {

  const changeColor = async (event) => {
    let material = modelViewer.materialFromPoint(event.clientX, event.clientY);

    if(material != null) {
      material.pbrMetallicRoughness.
        setBaseColorFactor([Math.random(), Math.random(), Math.random()]);
    }
  }

  modelViewer.addEventListener("click", changeColor);

});

</script>
</div>
      <div class="content">
        <div class="wrapper">
          <div class="heading">
            <h2 class="demo-title">Pick a Material</h2>
            <p>Demonstrates selecting a material with pointer input and changing its color. Note this also works in the WebXR AR mode. Also demonstrates the use of the scale attribute since this GLB was erroneously modeled in mm instead of meters.</p>
          </div>
          <example-snippet stamp-to="pickMaterialExample" highlight-as="html">
            <template>
<model-viewer id="pickMaterial" camera-controls="" src="../../shared-assets/models/glTF-Sample-Models/2.0/Buggy/glTF-Binary/Buggy.glb" ar="" ar-modes="webxr scene-viewer" scale="0.001 0.001 0.001" alt="A Material Picking Example">
</model-viewer>
<script type="module">
const modelViewer = document.querySelector("model-viewer#pickMaterial");

modelViewer.addEventListener("load", () => {

  const changeColor = async (event) => {
    let material = modelViewer.materialFromPoint(event.clientX, event.clientY);

    if(material != null) {
      material.pbrMetallicRoughness.
        setBaseColorFactor([Math.random(), Math.random(), Math.random()]);
    }
  }

  modelViewer.addEventListener("click", changeColor);

});

</script>
</template>
          <pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>model-viewer</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pickMaterial<span class="token punctuation">"</span></span> <span class="token attr-name">camera-controls</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/glTF-Sample-Models/2.0/Buggy/glTF-Binary/Buggy.glb<span class="token punctuation">"</span></span> <span class="token attr-name">ar</span> <span class="token attr-name">ar-modes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>webxr scene-viewer<span class="token punctuation">"</span></span> <span class="token attr-name">scale</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.001 0.001 0.001<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>A Material Picking Example<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>model-viewer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> modelViewer <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"model-viewer#pickMaterial"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

modelViewer<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"load"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  <span class="token keyword">const</span> <span class="token function-variable function">changeColor</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> material <span class="token operator">=</span> modelViewer<span class="token punctuation">.</span><span class="token function">materialFromPoint</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>clientX<span class="token punctuation">,</span> event<span class="token punctuation">.</span>clientY<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>material <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      material<span class="token punctuation">.</span>pbrMetallicRoughness<span class="token punctuation">.</span>
        <span class="token function">setBaseColorFactor</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  modelViewer<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> changeColor<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre></example-snippet>
        </div>
      </div>
    </div>

    <div class="sample">
      <div id="exporter" class="demo">
<model-viewer id="static-model" src="../../shared-assets/models/Astronaut.glb" shadow-intensity="1" camera-controls="" alt="A 3D model of an astronaut" data-js-focus-visible="" ar-status="not-presenting">
  <div class="controls">
    <button onclick="exportGLB()">Export GLB</button>
  </div>
</model-viewer>
<script>
  async function exportGLB(){
    let modelViewer = document.getElementById("static-model");
    const glTF = await modelViewer.exportScene();
    var file = new File([glTF], "export.glb");
    var link = document.createElement("a");
    link.download =file.name;
    link.href = URL.createObjectURL(file);
    link.click();
  }
</script>
            </div>
      <div class="content">
        <div class="wrapper">

          <a class="lockup" href="../../index.html"><div class="icon-button icon-modelviewer-black"></div><h1>examples</h1></a>
          <div class="heading">
            <h2 class="demo-title">Exporter</h2>
          </div>
          <example-snippet stamp-to="exporter" highlight-as="html">
            <template>
<model-viewer id="static-model" src="../../shared-assets/models/Astronaut.glb" shadow-intensity="1" camera-controls="" alt="A 3D model of an astronaut">
  <div class="controls">
    <button onclick="exportGLB()">Export GLB</button>
  </div>
</model-viewer>
<script>
  async function exportGLB(){
    let modelViewer = document.getElementById("static-model");
    const glTF = await modelViewer.exportScene();
    var file = new File([glTF], "export.glb");
    var link = document.createElement("a");
    link.download =file.name;
    link.href = URL.createObjectURL(file);
    link.click();
  }
</script>
            </template>
          <pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>model-viewer</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static-model<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/Astronaut.glb<span class="token punctuation">"</span></span> <span class="token attr-name">shadow-intensity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">camera-controls</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>A 3D model of an astronaut<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">exportGLB</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>Export GLB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>model-viewer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">exportGLB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> modelViewer <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"static-model"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> glTF <span class="token operator">=</span> <span class="token keyword">await</span> modelViewer<span class="token punctuation">.</span><span class="token function">exportScene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">[</span>glTF<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"export.glb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    link<span class="token punctuation">.</span>download <span class="token operator">=</span>file<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    link<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    link<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre></example-snippet>
        </div>
      </div>
    </div>

    <div class="sample">
      <div id="exporterWithOptions" class="demo">
<model-viewer id="animated-model" src="../../shared-assets/models/Horse.glb" autoplay="" camera-controls="" alt="A 3D model of a horse galloping" data-js-focus-visible="" ar-status="not-presenting">
  <div class="controls">
    <button onclick="exportScene(true)">Export GLB</button>
    <button onclick="exportScene(false)">Export GLTF</button>
  </div>
</model-viewer>
<script>
  async function exportScene(binary){
    let options = {
      binary: binary,
      trs: true,
      onlyVisible: true,
      maxTextureSize: 256,
      forcePowerOfTwoTextures: true,
      includeCustomExtensions: false,
      embedImages: true
    };
    let modelViewer = document.getElementById("animated-model");
    const glTF = await modelViewer.exportScene(options);
    var file = new File([glTF], binary ? "export.glb" : "export.gltf");
    var link = document.createElement("a");
    link.download =file.name;
    link.href = URL.createObjectURL(file);
    link.click();
  }
</script>
            </div>
      <div class="content">
        <div class="wrapper">
          <div class="heading">
            <h2 class="demo-title">Exporter with options</h2>
          </div>
          <example-snippet stamp-to="exporterWithOptions" highlight-as="html">
            <template>
<model-viewer id="animated-model" src="../../shared-assets/models/Horse.glb" autoplay="" camera-controls="" alt="A 3D model of a horse galloping">
  <div class="controls">
    <button onclick="exportScene(true)">Export GLB</button>
    <button onclick="exportScene(false)">Export GLTF</button>
  </div>
</model-viewer>
<script>
  async function exportScene(binary){
    let options = {
      binary: binary,
      trs: true,
      onlyVisible: true,
      maxTextureSize: 256,
      forcePowerOfTwoTextures: true,
      includeCustomExtensions: false,
      embedImages: true
    };
    let modelViewer = document.getElementById("animated-model");
    const glTF = await modelViewer.exportScene(options);
    var file = new File([glTF], binary ? "export.glb" : "export.gltf");
    var link = document.createElement("a");
    link.download =file.name;
    link.href = URL.createObjectURL(file);
    link.click();
  }
</script>
            </template>
          <pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>model-viewer</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>animated-model<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../shared-assets/models/Horse.glb<span class="token punctuation">"</span></span> <span class="token attr-name">autoplay</span> <span class="token attr-name">camera-controls</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>A 3D model of a horse galloping<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">exportScene</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>Export GLB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">exportScene</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>Export GLTF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>model-viewer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">exportScene</span><span class="token punctuation">(</span><span class="token parameter">binary</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
      binary<span class="token operator">:</span> binary<span class="token punctuation">,</span>
      trs<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      onlyVisible<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      maxTextureSize<span class="token operator">:</span> <span class="token number">256</span><span class="token punctuation">,</span>
      forcePowerOfTwoTextures<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      includeCustomExtensions<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      embedImages<span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> modelViewer <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"animated-model"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> glTF <span class="token operator">=</span> <span class="token keyword">await</span> modelViewer<span class="token punctuation">.</span><span class="token function">exportScene</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">[</span>glTF<span class="token punctuation">]</span><span class="token punctuation">,</span> binary <span class="token operator">?</span> <span class="token string">"export.glb"</span> <span class="token operator">:</span> <span class="token string">"export.gltf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    link<span class="token punctuation">.</span>download <span class="token operator">=</span>file<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    link<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    link<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre></example-snippet>
        </div>
      </div>
    </div>

    <div class="footer">
      <ul>
        <li class="attribution">
          <a href="https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/MaterialsVariantsShoe">Shoe</a> ©Copyright 2020 <a href="https://www.shopify.com/">Shopify Inc.</a>,
          licensed under <a href="https://creativecommons.org/licenses/by/4.0/">CC-BY-4.0</a>.
        </li>
        <li class="attribution">
          <a href="https://poly.google.com/view/dLHpzNdygsg">Astronaut</a> by <a href="https://poly.google.com/user/4aEd8rQgKu2">Poly</a>,
          licensed under <a href="https://creativecommons.org/licenses/by/2.0/">CC-BY</a>.
        </li>
        <li class="attribution">
          <a href="https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/DamagedHelmet">Damaged Helmet</a> by <a href="https://sketchfab.com/theblueturtle_">theblueturtle_</a>,
          licensed under <a href="https://creativecommons.org/licenses/by-nc/3.0/us/">Creative Commons Attribution-NonCommercial</a>.
        </li>
        <li class="attribution">
          <a href="https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/Lantern">Lantern</a>,
          licensed under <a href="https://creativecommons.org/publicdomain/zero/1.0/">Creative Commons Zero</a>.
        </li>
        <li class="attribution">
          <a href="https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/WaterBottle">Water Bottle</a>,
          licensed under <a href="https://creativecommons.org/publicdomain/zero/1.0/">Creative Commons Zero</a>.
        </li>
        <li class="attribution">
          <a href="https://github.com/dataarts/3-dreams-of-black/tree/master/deploy/files/models/soup">Horse</a> by <a href="https://github.com/dataarts">Google Data Arts Team</a>,
          licensed under <a href="https://github.com/dataarts/3-dreams-of-black/blob/master/deploy/files/models/soup/LICENSE.txt">Creative Commons Attribution-NonCommercial-ShareAlike</a>.
        </li>
        <li class="attribution">
          <a href="https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/Duck">Duck</a> by Sony Computer Entertainment Inc.,
          licensed under <a href="https://web.archive.org/web/20160320123355/http://research.scea.com/scea_shared_source_license.html">the SCEA Shared Source License, Version 1.0</a>.
        </li>
        <li class="attribution">
          <a href="https://github.com/dataarts/3-dreams-of-black/tree/master/deploy/files/models/soup">Buggy</a> by Okino Computer Graphics,
          Data conversion from original JT to COLLADA has been kindly performed by Okino Computer Graphics, using <a href="http://www.okino.com/conv/conv.htm">Okino Polytrans Software</a>.
        </li>
      </ul>
      <div style="margin-top:24px;" class="copyright">©Copyright 2018-2020 Google Inc. Licensed under the Apache License 2.0.</div>
      <div id="footer-links">
<div>
  <a href="https://github.com/google/model-viewer">Github</a> ∙ <a href="https://model-viewer.glitch.me/">Glitch</a> ∙ <a href="https://github.com/google/model-viewer/issues">Bug report</a> ∙ <a href="https://policies.google.com/privacy">Privacy</a>
</div></div>
    </div>
  </div>
<!--=<model-viewer style="width: 512px; height: 512px;" alt="Neil Armstrong's Spacesuit from the Smithsonian Digitization Programs Office and National Air and Space Museum" src="https://modelviewer.dev/shared-assets/models/NeilArmstrong.glb" ar ar-modes="webxr scene-viewer quick-look" environment-image="https://modelviewer.dev/shared-assets/environments/moon_1k.hdr" poster="https://modelviewer.dev/shared-assets/models/NeilArmstrong.webp" seamless-poster shadow-intensity="1" camera-controls></model-viewer>-->
      </div>
      
      <div id="thumbys" class="w-5/6 p-8 inline-flex">
        {% for pic in productPictures %}
        	{% if pic.alt contains "main" %}
              <div id="thumby-{{ forloop.index }}" class="mx-auto block">
                <img class="thumby" src="{{ pic.src | img_url: "250x250" }}" alt="{{ pic.alt }}" onClick="swapImages('{{ pic.src | img_url: "1024x1024" }}');" />
              </div>
       		{% endif %}
        {% endfor %}
       		 <div id="thumby-{{ forloop.index | plus: 1 }}" class="mx-auto block">
                <img class="thumby" src="{{ first_3d_model.preview_image | img_url: "250x250" }}" alt="{{ pic.alt }}" onClick="swapImages('{{ first_3d_model.preview_image | img_url: "1024x1024" }}');" />
              </div>
      </div>
    </div>

  <!-- PRODUCT INFORMATION -->
    <div class="product-information-section sm:w-full md:w-1/2 lg:w-1/2 mt-20 ml-10">
    	<div id="ProductInfo-{{ section.id }}">
        	{%- assign product_form_id = 'product-form-' | append: section.id -%}
        	{%- for block in section.blocks -%}
            	{%- case block.type -%}
                  {%- when '@app' -%}
                  	{% render block %}
                  {%- when 'text' -%}
                      <p class="product__text">
                        {{- block.settings.text -}}
                      </p>
                  {%- when 'title' -%}
                      <span class="product-make-and-model text-3xl" style="">
                        {{ product.metafields.global.product_make | upcase | escape }} / {{ product.metafields.global.product_model | upcase | escape }}
                      </span>
                      <h1 class="product__title text-6xl" {{ block.shopify_attributes }}>
                        {{ product.title | remove: "Rockford Fosgate" | remove: "Polaris" | remove: "Can-Am" | remove: "Honda" | remove: "Tracker" | remove: "Yamaha" | remove: "Warn" | remove: "KFI" | escape }}
                      </h1>
                  {%- when 'description' -%}
                      {%- if product.description != blank -%}
                          <div class="product__description rte">
                            {{ product.description }}
                          </div>
                      {%- endif -%}
                  {%- when 'collapsible_tab' -%}
                      <div class="product__accordion accordion" {{ block.shopify_attributes }}>
                        <details>
                          <summary>
                            <div class="summary__title">
                              {% render 'icon-accordion', icon: block.settings.icon %}
                              <h2 class="h4 accordion__title">
                                {{ block.settings.heading | default: block.settings.page.title }}
                              </h2>
                            </div>
                            {% render 'icon-caret' %}
                          </summary>
                          <div class="accordion__content rte">
                            {{ block.settings.content }}
                            {{ block.settings.page.content }}
                          </div>
                        </details>
                      </div>
                  {%- when 'quantity_selector' -%}
                      <div class="quantity-wrapper product-form__input product-form__quantity" {{ block.shopify_attributes }}>
                        <style>
                          .product__info-container--sticky {
                            position: static !important;
                          }
                        </style>
                        <label class="form__label" for="Quantity-{{ section.id }}">{{ 'products.product.quantity.label' | t }}</label>
                        <quantity-input class="quantity">
                          <button class="quantity__button no-js-hidden" name="minus" type="button">
                            <span class="visually-hidden">{{ 'products.product.quantity.decrease' | t: product: product.title | escape }}</span>
                            {% render 'icon-minus' %}
                          </button>
                          <input class="quantity__input" type="number" name="quantity" id="Quantity-{{ section.id }}" min="1" value="1" form="product-form-{{ section.id }}">
                          <button class="quantity__button no-js-hidden" name="plus" type="button">
                            <span class="visually-hidden">{{ 'products.product.quantity.increase' | t: product: product.title | escape }}</span>
                            {% render 'icon-plus' %}
                          </button>
                        </quantity-input>
                      </div>
                  {%- when 'popup' -%}
                      <modal-opener class="product-popup-modal__opener no-js-hidden" data-modal="#PopupModal-{{ block.id }}" {{ block.shopify_attributes }}>
                        <button id="ProductPopup-{{ block.id }}" class="product-popup-modal__button link" type="button" aria-haspopup="dialog">{{ block.settings.link_label | default: block.settings.page.title }}</button>
                      </modal-opener>
                      <a href="{{ block.settings.page.url }}" class="product-popup-modal__button link no-js">{{ block.settings.link_label }}</a>
                  {%- when 'share' -%}
                      <share-button class="share-button" {{ block.shopify_attributes }}>
                        <button class="share-button__button button button--tertiary hidden">
                          {% render 'icon-share' %}
                          {{ 'general.share.share' | t }}
                        </button>
                        <details>
                          <summary class="share-button__button button button--tertiary">
                            {% render 'icon-share' %}
                            {{ 'general.share.share' | t }}
                          </summary>
                          <div class="share-button__fallback">
                            <div class="field">
                              <input type="text" class="field__input" id="url" value="{{ shop.url | append: product.url }}" placeholder="{{ 'general.share.share_url' | t }}" onclick="this.select();" readonly />
                              <label class="field__label" for="url">{{ 'general.share.share_url' | t }}</label>
                            </div>
                            <button class="button button--tertiary">
                              {% render 'icon-clipboard' %}
                              {{ 'general.share.copy_to_clipboard' | t }}
                            </button>
                            <span id="ShareMessage-{{ section.id }}" class="share-button__message hidden" role="status" aria-hidden="true">
                              {{ 'general.share.success_message' | t }}
                            </span>
                          </div>
                        </details>
                      </share-button>
                      <script src="{{ 'share.js' | asset_url }}" defer="defer"></script>
                  {%- when 'variant_picker' -%}
                      <div class="variant-wrapper">
                        {%- unless product.has_only_default_variant -%}
                        {%- if block.settings.picker_type == 'button' -%}
                        <variant-radios class="selector_werapper no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                          {%- for option in product.options_with_values -%}
                          <fieldset class="js product-form__input">
                            <legend class="form__label">{{ option.name }}</legend>
                            {%- for value in option.values -%}
                            <input type="radio" id="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}" name="{{ option.name }}" value="{{ value | escape }}" form="product-form-{{ section.id }}" {% if option.selected_value == value %}checked{% endif %}>
                            <label for="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}">{{ value }}</label>
                            {%- endfor -%}
                          </fieldset>
                          {%- endfor -%}
                          <script type="application/json">
                                                            {{ product.variants | json }} 
                          </script>
                        </variant-radios>
                        {%- else -%}
                        <variant-selects class="selector-wrapper no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                          {%- for option in product.options_with_values -%}
                          <div class="product-form__input product-form__input--dropdown">
                            <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>
                            <div class="select">
                              <select id="Option-{{ section.id }}-{{ forloop.index0 }}" class="select__select" name="options[{{ option.name | escape }}]" form="product-form-{{ section.id }}">
                                {%- for value in option.values -%}
                                <option value="{{ value | escape }}" {% if option.selected_value == value %}selected="selected"{% endif %}>{{ value }}</option>
                                {%- endfor -%}
                              </select>
                              {% render 'icon-caret' %}
                            </div>
                          </div>
                          {%- endfor -%}
                          <script type="application/json">
                                                            {{ product.variants | json }}
                          </script>
                        </variant-selects>
                        {%- endif -%}
                        {%- endunless -%}   
                      </div>
                      <noscript>
                        <div class="product-form__input{% if product.has_only_default_variant %} hidden{% endif %}">
                          <label class="form__label" for="Variants-{{ section.id }}">{{ 'products.product.product_variants' | t }}</label>
                          <div class="select">
                            <select name="id" id="Variants-{{ section.id }}" class="select__select" form="product-form">
                              {%- for variant in product.variants -%}
                              <option
                                      {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %}
                                      {% if variant.available == false %}disabled{% endif %}
                                      value="{{ variant.id }}"
                                      >
                                {{ variant.title }}
                                {%- if variant.available == false %} - {{ 'products.product.sold_out' | t }}{% endif %}
                                                                - {{ variant.price | money | strip_html }}
                              </option>
                              {%- endfor -%}
                            </select>
                            {% render 'icon-caret' %}
                          </div>
                        </div>
                      </noscript>
                  {%- when 'price' -%}
                      <div class="product-price" id="price-{{ section.id }}" {{ block.shopify_attributes }}>
                        {%- render 'price', product: product, use_variant: true, show_badges: true, price_class: 'price--large' -%}
                      </div>
                      <div {{ block.shopify_attributes }}>
                        {%- form 'product', product, id: 'product-form-installment', class: 'installment caption-large' -%}
                            <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                            {{ form | payment_terms }}
                        {%- endform -%}
                      </div>    
                  {%- when 'buy_buttons' -%}
                      	<div class="buy-buttons" {{ block.shopify_attributes }}>
                            <product-form>
                              {%- form 'product', product, id: product_form_id, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
                                  <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">              
                                  <div class="product-form__buttons">
                                    <button id="AddToCart" type="submit" name="add" class="add-to-cart-button product-form__submit button button--full-width {% if block.settings.show_dynamic_checkout and product.selling_plan_groups == empty %}button--secondary{% else %}button--primary{% endif %}" {% if product.selected_or_first_available_variant.available == false %}disabled{% endif %}>
                                      {%- if product.selected_or_first_available_variant.available -%}
                                      {{ 'products.product.add_to_cart' | t | upcase }}
                                      {%- else -%}
                                      {{ 'products.product.sold_out' | t | upcase }}
                                      {%- endif -%}
                                    </button>
                                    {%- if block.settings.show_dynamic_checkout -%}
                                    {{ form | payment_button }}
                                    {%- endif -%}
                                  </div>
                              {%- endform -%}
                            </product-form>
                  		</div>                           
                    {%- endcase -%}
                {%- endfor -%}
                <!-- PICKUP AVAILABLILITY MODAL -->
                {{ 'component-pickup-availability.css' | asset_url | stylesheet_tag }}
                {%- assign pick_up_availabilities = product.selected_or_first_available_variant.store_availabilities | where: 'pick_up_enabled', true -%}
                <pickup-availability class="product__pickup-availabilities w-full"
                    {% if product.selected_or_first_available_variant.available and pick_up_availabilities.size > 0 %} available{% endif %}
                    data-base-url="{{ shop.url }}{{ routes.root_url }}"
                    data-variant-id="{{ product.selected_or_first_available_variant.id }}"
                    data-has-only-default-variant="{{ product.has_only_default_variant }}"
                >
                    <template>
                        <pickup-availability-preview class="pickup-availability-preview">
                            {% render 'icon-unavailable' %}
                            <div class="pickup-availability-info">
                                <p class="caption-large">{{ 'products.product.pickup_availability.unavailable' | t }}</p>
                                <button class="pickup-availability-button link link--text underlined-link">{{ 'products.product.pickup_availability.refresh' | t }}</button>
                            </div>
                        </pickup-availability-preview>
                    </template>
                </pickup-availability>     
          </div><!-- end product info {{ section.id }} -->

    <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>
	</div>    
        <!-- CART MODAL -->
        {%- render 'cart-notification' -%}
        
        {% assign popups = section.blocks | where: "type", "popup" %}
        {%- for block in popups -%}
            <modal-dialog id="PopupModal-{{ block.id }}" class="product-popup-modal" {{ block.shopify_attributes }}>
                <div role="dialog" aria-label="{{ block.settings.link_label }}" aria-modal="true" class="product-popup-modal__content" tabindex="-1">
                    <button id="ModalClose-{{ block.id }}" type="button" class="product-popup-modal__toggle" aria-label="{{ 'accessibility.close' | t }}">{% render 'icon-close' %}</button>
                    <div class="product-popup-modal__content-info">
                        <h1 class="h2">{{ block.settings.page.title }}</h1>
                        {{ block.settings.page.content }}
                    </div>
                </div>
            </modal-dialog>
        {%- endfor -%}
		</div>
</section>

{% javascript %}
  class ProductModal extends ModalDialog {
    constructor() {
      super();
    }

    hide() {
      super.hide();
      window.pauseAllMedia();
    }

    show(opener) {
      super.show(opener);
      this.showActiveMedia();
    }

    showActiveMedia() {
      this.querySelectorAll(`[data-media-id]:not([data-media-id="${this.openedBy.getAttribute("data-media-id")}"])`).forEach((element) => {
          element.classList.remove('active');
        }
      )
      const activeMedia = this.querySelector(`[data-media-id="${this.openedBy.getAttribute("data-media-id")}"]`);
      activeMedia.classList.add('active');
      activeMedia.scrollIntoView();

      if (activeMedia.nodeName == 'DEFERRED-MEDIA' && activeMedia.querySelector('template')?.content?.querySelector('.js-youtube'))
        activeMedia.loadContent();
    }
  }

  customElements.define('product-modal', ProductModal);
{% endjavascript %}
<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

{%- if first_3d_model -%}
  <script type="application/json" id="ProductJSON-{{ product.id }}">
    {{ product.media | where: 'media_type', 'model' | json }}
  </script>

  <script src="{{ 'product-model.js' | asset_url }}" defer></script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.main-product.name",
  "tag": "section",
  "class": "product-section spaced-section",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "text",
      "name": "t:sections.main-product.blocks.text.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Text block",
          "label": "t:sections.main-product.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.main-product.blocks.title.name",
      "limit": 1
    },
    {
      "type": "price",
      "name": "t:sections.main-product.blocks.price.name",
      "limit": 1
    },
    {
      "type": "quantity_selector",
      "name": "t:sections.main-product.blocks.quantity_selector.name",
      "limit": 1
    },
    {
      "type": "variant_picker",
      "name": "t:sections.main-product.blocks.variant_picker.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            {
              "value": "dropdown",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__1.label"
            },
            {
              "value": "button",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__2.label"
            }
          ],
          "default": "button",
          "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.label"
        }
      ]
    },
    {
      "type": "buy_buttons",
      "name": "t:sections.main-product.blocks.buy_buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.info"
        }
      ]
    },
    {
      "type": "description",
      "name": "t:sections.main-product.blocks.description.name",
      "limit": 1
    },
    {
      "type": "share",
      "name": "t:sections.main-product.blocks.share.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "share_label",
          "label": "t:sections.main-product.blocks.share.settings.text.label",
          "default": "Share"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.featured_image_info.content"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.title_info.content"
        }
      ]
    },
    {
      "type": "custom_liquid",
      "name": "t:sections.main-product.blocks.custom_liquid.name",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.label",
          "info": "t:sections.main-product.blocks.custom_liquid.settings.custom_liquid.info"
        }
      ]
    },
    {
      "type": "collapsible_tab",
      "name": "t:sections.main-product.blocks.collapsible_tab.name",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Collapsible tab",
          "info": "t:sections.main-product.blocks.collapsible_tab.settings.heading.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.heading.label"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.content.label"
        },
        {
          "type": "page",
          "id": "page",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.page.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            }
          ],
          "default": "check_mark",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        }
      ]
    },
    {
      "type": "popup",
      "name": "t:sections.main-product.blocks.popup.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Pop-up link text",
          "label": "t:sections.main-product.blocks.popup.settings.link_label.label"
        },
        {
          "id": "page",
          "type": "page",
          "label": "t:sections.main-product.blocks.popup.settings.page.label"
        },
{
		  "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.main-product.blocks.popup.settings.custom_liquid.label",
          "info": "t:sections.main-product.blocks.popup.settings.custom_liquid.info"
   
        }
      ]
    },
    {
      "type": "rating",
      "name": "t:sections.main-product.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.rating.settings.paragraph.content"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_sticky_info",
      "default": true,
      "label": "t:sections.main-product.settings.enable_sticky_info.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.header.content",
      "info": "t:sections.main-product.settings.header.info"
    },
    {
      "type": "checkbox",
      "id": "hide_variants",
      "default": false,
      "label": "t:sections.main-product.settings.hide_variants.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_looping.label"
    }
  ]
}
{% endschema %}
