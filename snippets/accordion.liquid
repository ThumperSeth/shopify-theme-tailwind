<style>
    .accordion {
	h2 {
		border-bottom: 1px solid rgba(#3E3E3E, .25);
		cursor: pointer;

		&:after {
			content: '+';
			float: right;
		}

		&.accordion-active:after {
			content: '-';
		}
	}

	// overwrite margin with padding on accordion elements
	// so animations don't jump when display switches on/off
	h2 {
		margin: 0;
		padding: 15px 0;
	}

	h3 {
		margin: 0;
		padding: 18px 0 0;
	}

	h4 {
		margin: 0;
		padding: 16px 0 0;
	}

	h5 {
		margin: 0;
		padding: 22px 0 0;
	}

	h6 {
		margin: 0;
		padding: 24px 0 0;
	}

	ul,
	ol {
		margin-bottom: 0;
		margin-top: 0;
		padding-bottom: 0;
		padding-top: 16px;
	}

	p {
		margin: 0;
		padding: 20px 0 0;
	}
}

.accordion-fade {
	opacity: 0;
	transition: opacity .2s ease-in, visibility .2s ease-in;
	visibility: hidden;

	&.accordion-active {
		opacity: 1;
		transition: opacity .2s ease-out;
		visibility: visible;
	}
}
</style>



{% comment %}
	
	accordion.liquid
	a style-agnostic accordion
	place this snippet in a page template you want to use an accordion in
	for example, include inside `page.faq.liquid`
	set the element you want to use as a toggle in the `data-accordion-toggle` attribute
	defaults to "h2"
	set the toggle speed (in ms) in the `data-accordion-speed` attribute
	defaults to 200
	requires jquery
{% endcomment %}
<div class="rte accordion accordion-fade" data-accordion-toggle="h2" data-accordion-speed="200">
	{{ page.content }}
</div>
<script>
	(function($, undefined) {
		'use strict';
	
		var prefix = 'data-accordion';
		var att = prefix + '-toggle';
		var $acc = $('[' + att + ']');
		var acc = $acc[0];
		var ANIM_TIME = parseInt(acc.getAttribute(prefix + '-speed'), 10);
		var DBL_ANIM_TIME = ANIM_TIME * 2.5;
		var ACTIVE_CLASS = 'accordion-active';
		var FADE_CLASS = 'accordion-fade';
		var $toggles = $acc.find(acc.getAttribute(att));
		var aToggleIsOpen = false;
		var closeToggle = function closeToggle() {
			var $toggle = $(this);
			var $content = $toggle.data('content.toggle');
			$toggle.data('open.toggle', false);
			$toggle.removeClass(ACTIVE_CLASS);
			$content.removeClass(ACTIVE_CLASS);
			setTimeout(function() {
				$content.slideUp({
					duration: ANIM_TIME,
					easing: 'easeOutQuad'
				});
			}, ANIM_TIME);
		};
		var openToggle = function openToggle() {
			var $toggle = $(this);
			var $content = $toggle.data('content.toggle');
			$toggle.data('open.toggle', true);
			$toggle.addClass(ACTIVE_CLASS);
			$content.slideDown({
				duration: ANIM_TIME,
				easing: 'easeInQuad'
			});
			setTimeout(function() {
				$content.addClass(ACTIVE_CLASS);
			}, ANIM_TIME)
			aToggleIsOpen = true;
		};
		// click event handler on toggles
		$toggles.on('click', function() {
			var _this = this;
			var $this = $(this);
			var isOpen = $this.data('open.toggle');
			
			if (isOpen) {
				closeToggle.call(this);
				aToggleIsOpen = false;
			} else if (aToggleIsOpen) {
				
				$toggles.not(this).each(closeToggle);
				setTimeout(function() {
					openToggle.call(_this);
				}, DBL_ANIM_TIME);
				
			} else {
				openToggle.call(this);
			}
		});
		// init
		// bind data relative to each toggle
		// hide elements that should be hidden
		// show accordion
		$toggles.each(function() {
			var $this = $(this);
			var $content = $this.nextUntil('h2');
			$content.addClass(FADE_CLASS);
			$content.hide();
			$this.data('content.toggle', $content);
			$this.data('open.toggle', false);
			$acc.addClass(ACTIVE_CLASS);
		});
	})(jQuery);
</script>