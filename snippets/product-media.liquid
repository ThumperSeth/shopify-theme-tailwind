{% comment %}
    Renders product media

    Accepts:
    - media: {Object} Product Media object
    - loop: {Boolean} Enable video looping (optional)
    - variant_image: {Boolean} The media associated with a variant

    Usage:
    {% render 'product-media',
      media: media,
      loop: section.settings.enable_video_looping,
      variant_image: true
    %}
{% endcomment %}

{%- if media.media_type == 'image' -%}
  <img
    srcset="{%- if media.preview_image.width >= 550 -%}{{ media.preview_image | img_url: '550x' }} 550w,{%- endif -%}
            {%- if media.preview_image.width >= 1100 -%}{{ media.preview_image | img_url: '1100x' }} 1100w,{%- endif -%}
            {%- if media.preview_image.width >= 1445 -%}{{ media.preview_image | img_url: '1445x' }} 1445w,{%- endif -%}
            {%- if media.preview_image.width >= 1680 -%}{{ media.preview_image | img_url: '1680x' }} 1680w,{%- endif -%}
            {%- if media.preview_image.width >= 2048 -%}{{ media.preview_image | img_url: '2048x' }} 2048w,{%- endif -%}
            {%- if media.preview_image.width >= 2200 -%}{{ media.preview_image | img_url: '2200x' }} 2200w,{%- endif -%}
            {%- if media.preview_image.width >= 2890 -%}{{ media.preview_image | img_url: '2890x' }} 2890w,{%- endif -%}
            {%- if media.preview_image.width >= 4096 -%}{{ media.preview_image | img_url: '4096x' }} 4096w,{%- endif -%}
            {{ media.preview_image | img_url: 'master' }} {{ media.preview_image.width }}w"
    sizes="(min-width: 750px) calc(100vw - 22rem), 1100px"
    src="{{ media.preview_image | img_url: '1445x' }}"
    alt="{{ media.alt | escape }}"
    loading="lazy"
    width="1100"
    height="{{ 1100 | divided_by: media.preview_image.aspect_ratio | ceil }}"
    data-media-id="{{ media.id }}"
    {% if variant_image %}class="product__media-item--variant"{% endif %}
  >
{%- else -%}
  {%- if media.media_type == 'model' -%}
    <div class="product-media-modal__model" data-media-id="{{ media.id }}">
      <product-model class="deferred-media media media--transparent" style="padding-top: min(calc(100vh - 12rem), 100%)">
  {%- else -%}
    <deferred-media class="deferred-media media" style="padding-top: min(calc(100vh - 12rem), {{ 1 | divided_by: media.aspect_ratio | times: 100 }}%)" data-media-id="{{ media.id }}">
  {%- endif -%}

    <button id="Deferred-Poster-Modal-{{ media.id }}" class="deferred-media__poster" type="button">
      <span class="deferred-media__poster-button motion-reduce">
        {%- if media.media_type == 'model' -%}
          {%- render 'icon-3d-model' -%}
        {%- else -%}
          {%- render 'icon-play' -%}
        {%- endif -%}
      </span>
      <img
        srcset="{% if media.preview_image.width >= 288 %}{{ media.preview_image | img_url: '288x' }} 288w,{% endif %}
                {% if media.preview_image.width >= 576 %}{{ media.preview_image | img_url: '576x' }} 576w,{% endif %}
                {% if media.preview_image.width >= 550 %}{{ media.preview_image | img_url: '550x' }} 550w,{% endif %}
                {% if media.preview_image.width >= 1100 %}{{ media.preview_image | img_url: '1100x' }} 1100w,{% endif %}
                {{ media.preview_image | img_url: 'master' }} {{ media.preview_image.width }}w"
        src="{{ media | img_url: '550x550' }}"
        sizes="(min-width: 1200px) calc((1200px - 10rem) / 2), (min-width: 750px) calc((100vw - 11.5rem) / 2), calc(100vw - 4rem)"
        loading="lazy"
        width="576"
        height="{{ 576 | divided_by: media.preview_image.aspect_ratio }}"
        alt="{{ media.preview_image.alt | escape }}"
      >
    </button>
    <template>
      {%- case media.media_type -%}
      {%- when 'external_video' -%}
        {%- assign video_class = 'js-' | append: media.host -%}
        {%- if media.host == 'youtube' -%}
          {{ media | external_video_url: autoplay: true, loop: loop, playlist: media.external_id | external_video_tag: class: video_class, loading: "lazy" }}
        {%- else -%}
          {{ media | external_video_url: autoplay: true, loop: loop | external_video_tag: class: video_class, loading: "lazy" }}
        {%- endif -%}
      {%- when 'video' -%}
        {{ media | media_tag: image_size: "2048x", autoplay: true, loop: loop, controls: true, preload: "none", autoplay: true }}
      {%- when 'model' -%}
        {{ media | media_tag: image_size: "2048x", toggleable: true }}
      {%- endcase -%}
    </template>

  {%- if media.media_type == 'model' -%}
      </product-model>
      <button
        class="button button--full-width product__xr-button"
        type="button"
        aria-label="{{ 'products.product.xr_button_label' | t }}"
        data-shopify-xr
        data-shopify-model3d-id="{{ media.id }}"
        data-shopify-title="title"
        data-shopify-xr-hidden
        >
        {% render 'icon-3d-model' %}
        {{ 'products.product.xr_button' | t }}
      </button>
    </div>
  {%- else -%}
    </deferred-media>
  {%- endif -%}
{%- endif -%}
<header class="section-header mb-0 text-center"><hr class="hr--small"></header>
<div class="grid">
<div class="grid__item large--four-fifths push--large--one-tenth">
<div class="rte rte--nomargin rte--indented-images"></div>
</div>
</div>
<!-- Start of order form table --> <button type="button" class="btn--small hide-images">Hide Images</button> {% assign counter = 0 %} {% for product in collections.products %} {% for variant in product.variants %} {% assign outer_forloop = forloop %} {% assign current_variant = product.selected_or_first_available_variant %} {% assign counter = counter | plus: 1 %} {% endfor %} {% endfor %}
<table>
<!-- Button to hide images to clean up form --> <!-- Form Headers -->
<tbody>
<tr>
<th class="image-header">Image</th>
<th class="sku-header">SKU</th>
<th class="product-header">Product</th>
<th class="quantity-header">Quantity</th>
<th class="price-header">Item Price</th>
<th class="subtotal-header">Subtotal</th>
</tr>
<tr class="row">
<!-- Image Column -->
<td class="{{ media.preview_image | img_url: '1445x' }}"></td>
<!--SKU Column -->
<td class="sku">{{ variant.sku }}</td>
<!-- Title Column -->
<td class="product-title">
<a class="text-link" href="%7B%7B%20product.url%20%7D%7D" target="_blank" rel="noopener noreferrer">{{ product.title }}</a> <!--Don't display variant title if there's only one option--> {% assign hide_default_title = false %} {% if variant.title contains 'Default' %} {% assign hide_default_title = true %} {% endif %} {% if hide_default_title %}{% else %}
<div class="variant-title">{{ variant.title }}</div>
{% endif %}</td>
<!-- Product Qty Textboxes -->
<td class="quantity"><input type="number" class="order-quantity" data-variant-price="{{ variant.price | money_without_currency}}" data-variant="{{ variant.id }}" id="quantity-{{ counter }}" name="quantity" pattern="[0-9]*" value="0" min="0"></td>
<!-- Item Price -->
<td class="price">{{ variant.price | money }}</td>
<!-- Sub Total -->
<td class="subtotal">$<span>0</span>
</td>
</tr>
</tbody>
</table>
<!-- Product and Price Total -->
<div class="order-form-totals">
<div class="product_total">
<strong>Product Total:</strong> <span class="product-total-amount">0</span>
</div>
<div class="order_total">
<strong>Order Total:</strong> <span class="order-total-amount">$<span>0</span></span>
</div>
<div><input type="submit" value="Add to Cart" class="btn" id="add-items"></div>
</div>
<script>// <![CDATA[
$(document).ready(function () {

    //Count the total products on the page
    var length = {{ counter }};

    //Start with an empty array of items
    Shopify.queue = []; 


    //Watch for all changes on quantity inputs
    $('.quantity input').on('input',function() {

      //Set an initial flag for a new item
      var newItem = true;

      //Declare product property variables
      var price = $(this).attr('data-variant-price');
      var lineItemOne = $(this).parent().siblings('.product-title').find('input').val();
      var quantity = parseInt($(this).val(), 10) || 0;
      var variant = $(this).attr('data-variant');
      var totalQuantity = $('.product-total-amount');
      var totalPrice = $('.order-total-amount span');

      //Function to update the subtotal price, total item quantity, and total price
      var totalQuantityCount = 0;
      var totalPriceAmount = 0;
      function updateTotals($element, prc, qty) {
        //Traverse DOM to find subtotal field
        var $subtotal = $($element).parent().siblings('.subtotal').find('span')
        //Update subtotal column
        $subtotal.html((price * quantity).toFixed(2))
        
        //Update total quantity, and total order price elements       
        for (var index in Shopify.queue) {
          totalQuantityCount += Shopify.queue[index].quantity;
          totalPriceAmount += Shopify.queue[index].quantity * Shopify.queue[index].price;
        }
        totalQuantity.html(totalQuantityCount);
        totalPrice.html(totalPriceAmount.toFixed(2));
      }

      //Check the queue and add items 
      //If queue is empty, add the item and update totals
      if(Shopify.queue.length <= 0) {
        Shopify.queue.push( {
          variantId: variant,
          quantity: quantity,
          price: price
        });
        updateTotals($(this), price, quantity);
      }
      //If queue contains items, check to see if the item exists already
      //If item exists, update quantity values, totals, then exit 
      else if (Shopify.queue.length > 0) {
        for (var index in Shopify.queue) {
          if(parseInt(Shopify.queue[index].variantId) == variant) {
            Shopify.queue[index].quantity = quantity;
            newItem = false;
            updateTotals($(this), price, quantity);
            return;
          }
        }
        //If item doesn't exist in queue, add item to queue and update totals
        if(newItem == true) {
          Shopify.queue.push({
            variantId: variant,       
            quantity: quantity,
            price: price
          });
          updateTotals($(this), price, quantity);
        }
      }  

    });

    //Add item to cart AJAX request function
    Shopify.addItem = function(variant,qty,callback) {   
      var params = {
        quantity: qty,
        id: variant
      };
      $.ajax({
        type: 'POST',
        url: '/cart/add.js',
        dataType: 'json',
        data: params,
        success: function(){
          if(typeof callback === 'function'){
            callback();
          }
        },
        error: function(){
         alert('Uh oh, something went wrong');
        }
      });
    };

    Shopify.moveAlong = function($element) {

      // If we still have requests in the queue, let's process the next one.
      if (Shopify.queue.length) {
        var request = Shopify.queue.shift();
        Shopify.addItem(request.variantId, request.quantity, Shopify.moveAlong);

      }
      // If the queue is empty, redirect to the cart page.
      else {
        document.location.href = '/cart';
      }
    };

    //Run the  when clicking Add to Cart
    $("#add-items").click(function(e) {
      e.preventDefault();
      Shopify.moveAlong($(this));
      $(this).val('Adding items...');
    });

    //Function to hide image column if user chooses
    $('.hide-images').click(function() {
      $('.image-header, .product-images').toggle();
      if ($('.hide-images').text() === 'Hide Images') {
        $('.hide-images').text('Show Images');
      } else $(this).text('Hide Images');

    });
  });
// ]]></script>